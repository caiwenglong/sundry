import{_ as e,o as t,c as a,O as r}from"./chunks/framework.c8e53cde.js";const h=JSON.parse('{"title":"一些零碎的东西","description":"","frontmatter":{},"headers":[],"relativePath":"grocery/index.md"}'),o={name:"grocery/index.md"},i=r('<h1 id="一些零碎的东西" tabindex="-1">一些零碎的东西 <a class="header-anchor" href="#一些零碎的东西" aria-label="Permalink to &quot;一些零碎的东西&quot;">​</a></h1><h2 id="webstorm-调试vue代码-需要先把项目跑起来-然后在进行debugger" tabindex="-1">webstorm 调试vue代码，需要先把项目跑起来，然后在进行debugger <a class="header-anchor" href="#webstorm-调试vue代码-需要先把项目跑起来-然后在进行debugger" aria-label="Permalink to &quot;webstorm 调试vue代码，需要先把项目跑起来，然后在进行debugger&quot;">​</a></h2><h2 id="在vue中如果-input-输入值的时候没有反应-说明这个input绑定的值不是响应式的-可以通过const-reactiveobject-vue-observable-value-item-来创建一个响应式对象" tabindex="-1">在vue中如果 input 输入值的时候没有反应，说明这个input绑定的值不是响应式的，可以通过const reactiveObject = Vue.observable({ value: item }) 来创建一个响应式对象 <a class="header-anchor" href="#在vue中如果-input-输入值的时候没有反应-说明这个input绑定的值不是响应式的-可以通过const-reactiveobject-vue-observable-value-item-来创建一个响应式对象" aria-label="Permalink to &quot;在vue中如果 input 输入值的时候没有反应，说明这个input绑定的值不是响应式的，可以通过const reactiveObject = Vue.observable({ value: item }) 来创建一个响应式对象&quot;">​</a></h2>',3),n=[i];function c(s,u,d,l,_,b){return t(),a("div",null,n)}const m=e(o,[["render",c]]);export{h as __pageData,m as default};
